{"ast":null,"code":"const usePrimaryKey = () => {\n  // recursion for Primary key max capacity 1990\n  const keyGenerator = lists => {\n    let uniqueId = 'id_' + parseInt((Math.random() * (2000 - 10) + 10).toString());\n    let exists = lists.filter(x => x.id == uniqueId);\n    if (exists.length == 0) return uniqueId;else keyGenerator(lists);\n  };\n  return {\n    keyGenerator\n  };\n};\nexport default usePrimaryKey;","map":{"version":3,"names":["usePrimaryKey","keyGenerator","lists","uniqueId","parseInt","Math","random","toString","exists","filter","x","id","length"],"sources":["/home/cedcoss/mark01/A-React Work/01_firstReactApp/94_ecommerce/admin/src/Components/Hooks/useSettings.tsx"],"sourcesContent":["import { MyState } from \"../../Types/MyTypescript\"\n\nconst usePrimaryKey = () => {\n// recursion for Primary key max capacity 1990\n    const keyGenerator = (lists:any) => {\n      let uniqueId='id_'+parseInt((Math.random()*(2000-10)+10).toString())\n      let exists=lists.filter((x:any)=>x.id==uniqueId)\n      if(exists.length==0)\n        return uniqueId\n      else\n      keyGenerator(lists)\n    }\n    return {keyGenerator}\n}\nexport default usePrimaryKey"],"mappings":"AAEA,MAAMA,aAAa,GAAG,MAAM;EAC5B;EACI,MAAMC,YAAY,GAAIC,KAAS,IAAK;IAClC,IAAIC,QAAQ,GAAC,KAAK,GAACC,QAAQ,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,IAAE,IAAI,GAAC,EAAE,CAAC,GAAC,EAAE,EAAEC,QAAQ,EAAE,CAAC;IACpE,IAAIC,MAAM,GAACN,KAAK,CAACO,MAAM,CAAEC,CAAK,IAAGA,CAAC,CAACC,EAAE,IAAER,QAAQ,CAAC;IAChD,IAAGK,MAAM,CAACI,MAAM,IAAE,CAAC,EACjB,OAAOT,QAAQ,MAEjBF,YAAY,CAACC,KAAK,CAAC;EACrB,CAAC;EACD,OAAO;IAACD;EAAY,CAAC;AACzB,CAAC;AACD,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}